Mantiqiy formulalar rostlik jadvallari yordamida izohlanadi. Bunday jadvallar mantiqiy bog‘lovchi orqali tuzilgan murakkab mulohazaning rost(1) yoki yolg‘on(0)ligini tashkil etuvchi mulohazalarning rostligiga qarab aniqlanadi. Mantiqiy amallarning rostlik jadvallaridan foydalanib, murakkabroq mulohazalar uchun rostlik jadvalini tuzish mumkin. Rostlik jadvalini tuzishda amallarning bajarilish tartibiga rioya qilish shart. Mulоhаzаlаr to‘plаmidа аvvаl inkоr аmаli, kеyin kоnyunksiya, dizyunksiya, implikаtsiya vа nihоyat ekvivаlеnsiya аmаllаri bаjаrilаdi. Аgаr inkоr аmаli qаvslаrdаn tаshqаridа bo‘lsa, u hоldа dastlab qаvs ichidаgi аmаllаr bаjаrilаdi. Teng kuchli yoki bir xil amallar ketma-ketligi bajarilayotganda, amallar chapdan o‘ngga tomon tartib bilan bajariladi. Ichma-ich joylashgan qavslarda eng ichkaridagi qavs ichidagi amallar birinchi bajariladi. Mantiq algebrasi matematikaning bir bо‘limi hisoblanib, avtomatik qurilmalarni loyihalashtirishda, axborot va kommunikatsiya texnologiyalarining apparatli va dasturiy vositalarini ishlab chiqishda muhim o‘rin tutadi. Ma’lumki, har qanday axborot diskret kо‘rinishda, ya’ni alohida qiymatlarning fiksirlangan (belgilangan) to‘plami kо‘rinishida taqdim etilishi mumkin. Diskret qayta ishlovchi qurilma ikkilik signallarni qayta ishlaganidan keyin biror mantiqiy amalning qiymatini chiqarsa, u mantiqiy element deb ataladi. Bunday qiymatlar (signallar)ni qayta ishlovchi qurilmalarga esa diskret qurilmalar deyiladi. Mantiqiy elementlar kompyuterning tarkibiy qismi bo‘lib, ikkilik o‘zgaruvchilar ustida muayyan mantiqiy amallarni bajarish uchun mo‘ljallangan elementlar hisoblanadi. Zamonaviy raqamli texnologiyalarning barcha hisoblash qurilmalari (kompyuter, mobil qurilmalar) mantiqiy elementlarga asoslangan. Kompyutеrning har qanday mantiqiy amali asosiy mantiqiy elеmеntlar yordamida bajariladi. Har bir mantiqiy element bir yoki bir necha mantiqiy amalning bajarilishini ta’minlaydi. Quyida eng sodda va keng tarqalgan mantiqiy elementlar bilan tanishamiz. Elеmеntlarning o‘zi oddiy elеktr sxеmalardan tuziladi. Bunda sxеmaning kirish qismiga kеlgan signallarga argumеnt dеyilsa, chiqishdagi signallar esa argumеntning funksiyasi bo‘ladi. 
Inson amaliy ish jarayonida ko‘plab masalalarni hal etishiga to‘g‘ri keladi. Bu masalalarning ba’zilari osongina, ba’zilari esa murakkab hisob-kitoblar orqali hal etiladi. Ba’zi masalalarni yechishda esa qandaydir amallar guruhini minglab marta bajarishga to‘g‘ri kelishi mumkin. Shuning uchun beminnat va o‘ta tez ishlaydigan yordamchimiz bo‘lmish kompyuter bizga yaqindan yordam bera oladimi, agar yordam bera olsa, ularni kompyuterda hal etish qanday tashkil etiladi, degan savollar tug‘ilishi tabiiy hol. Aslida esa kompyuter masalalarni tez hal qilish va ma’lumotlarni qayta ishlash uchun yaratilgan.
Shunday hisoblash jarayonlari ham bo‘ladiki, unda qo‘yilgan ayrim mantiqiy shartlarning bajarilishiga ko‘ra jarayonlar bir necha tarmoqqa bo‘linadi hamda ulardan hech bo‘lmaganda bittasi bajariladi. Bunday jarayonlar bajarilishi uchun tarmoqlanuvchi algoritmlar tuziladi. Agar hisoblash jarayoni qandaydir berilgan shartning bajarilishiga qarab turli tarmoqlar bo‘yicha davom ettirilsa va hisoblash jarayonida har bir tarmoq faqat bir marta bajarilsa, bunday hisoblash jarayonlariga tarmoqlanuvchi algoritmlar deyiladi. Tarmoqlanuvchi struktura, odatda, qandaydir mantiqiy shartni tekshirish blokini o‘z ichiga oladi. Tekshirish natijasiga ko‘ra, tarmoq deb ataluvchi u yoki bu amallar ketma-ketligi bajariladi. Tarmoqlanuvchi tuzilish shart tekshirish natijasiga (ha yoki yo‘q) qarab ikki yo‘ldan birini tanlash imkoniyatini beradi, ya’ni ko‘rsatilgan tarmoqdan faqat bittasining bajarilishini ta’minlaydi.
Protsessor dasturlash tilida yozilgan dasturni to‘g‘ridan-to‘g‘ri tushunmaydi. Buning uchun dasturni protsessor tiliga tarjima qiladigan (raqamli ko‘rinishga o‘tkazib beruvchi) tarjimon tili – translyatordan foydalaniladi. Tarjimon tilining ikkita turi mavjud: kompilyator va interpretator. Kompilyator dasturlash tilida yozilgan dastur kodlarini to‘laligicha o‘qib, mashina kodiga tarjima qiladi va tarjima natijalarini bajariladigan yaxlit bitta faylga yig‘adi. Interpretator dasturlash tilida yozilgan kodni bosqichma-bosqich mashina kodiga aylantirib, tahlil qiladi va berilgan buyruqlarni ketma-ketlikda bajaradi. Agar xatolik sodir bo‘lsa, o‘sha zahoti xabar beradi. Dasturlash tillari juda ko‘p bo‘lib, ularning har biridan o‘ziga xos masalalarni yechishda foydalanish mumkin. Quyida ularning eng mashhurlari haqidagi ma’lumotlar bilan tanishamiz.
Aksariyat dasturlash tillari, xususan, C++, Pascal, Java, Python va boshqalar integrallashgan dasturlash muhiti (IDE)ga ega. IDE (Integrated Development Environment – integrallashgan dasturlash muhiti) – dasturiy ta’minot yaratish uchun dasturiy vositalar majmui. Tizimli va amaliy dasturlarni yaratish uchun dasturlash tillaridan foydalaniladi. Dastur yaratish jarayoni katta hajmga ega bo‘lib, dasturlash tillarida dastur yozish shu jarayonning bir qismi sanaladi. Avvalgi mavzularimizda kompyuterda masalani yechish bosqichlarini ko‘rib chiqqan edik. Kompyuter dasturlarini yaratish jarayoni ham kompyuterda masalani yechish jarayoniga o‘xshash bo‘lib, bir necha bosqichni o‘z ichiga oladi. Birinchi bosqichda dastur uchun talab aniqlanadi. Ushbu jarayonda dasturning qanday maqsadda qo‘llanilishi, kirish va chiqish ma’lumotlari aniqlanadi. Dastur va resurslarni ishlab chiqish, uni joriy etishning narxi baholanadi.
Ikkinchi bosqichda dastur loyihasi ishlab chiqiladi. Dasturchilar uchun texnik topshiriq va vazifalar shakllantiriladi. Ishchi hujjatlar hamda ish rejasining grafigi tuziladi. Uchinchi bosqichda dastur kodi yoziladi. Bu kodlash (dasturlash) jarayoni bo‘lib, tuzilgan algoritm dasturlash tilida yoziladi. To‘rtinchi bosqichda kodlash jarayoni tugab, dasturdagi xatoliklarni aniqlash va testlash boshlanadi. Bu jarayonda dasturning to‘g‘ri tuzilganligi, ishlash samaradorligi va boshqa parametrlariga aniqlik kiritiladi. Beshinchi bosqichda dastur amaliyotga joriy etiladi. Agar dastur aniq buyurtmachi talabiga muvofiq yaratilgan bo‘lsa, u holda bu bosqich eng muhim bosqich sanaladi. Bunda avvalgi dasturda foydalanilgan qurilma va ma’lumotlar yangi dasturga moslanadi. Ushbu dastur bilan ishlovchi mutaxassislar o‘qitiladi. Oltinchi so‘nggi bosqichda qo‘llab-quvvatlash amalga oshiriladi. Bu bosqichda foydalanuvchilarga tavsiyalar beriladi. Shuningdek, foydalanuvchi xohishini inobatga olgan holda, ish jarayonida yuzaga kelgan kamchilik va takliflar asosida dasturga o‘zgartirishlar kiritiladi.
Endi Python dasturlash tili yordamida dasturlashni o‘rganishni boshlaymiz. Python dunyo miqyosida eng ommalashgan, mukammal dasturiy mahsulotlarni yaratishga mo‘ljallangan dasturlash tillaridan biri bo‘lib, uning yordamida web-sayt, ilova va o‘yinlar yaratiladi. Quyidagi imkoniyatlar bu tilni o‘rganish uchun yordamchi omillar hisoblanadi. O‘rganish va qo‘llashning soddaligi. Python sodda va qulay dasturlash tili bo‘lib, boshqa dasturlash tillariga nisbatan uning yordamida dastur tuzish qiyinchilik tug‘dirmaydi. Mukammal kutubxonaning mavjudligi. Pythonda dastur tuzish jarayonida kutubxonadagi tayyor funksiyalardan foydalanish mumkin. Bu esa murakkab dasturlarni ham qisqa vaqtda tuzish imkonini beradi.
Mashhur firmalarning ushbu dasturdan foydalanishi. Python mukammal dastur bo‘lganligi sababli, bugungi kunda Google, NASA va Pixar kabi firmalar o‘z dasturlarini tuzishda undan foydalanishadi. Python interpretatori bepul o‘rnatiladi. Ushbu dasturni yuklab olib, kerakli ilovalari bilan bepul ishlatish mumkin.
IDLEning dasturlash muhiti – dastur kodini kiritish, tahrirlash va ishga tushirish mumkin bo‘lgan oyna. Dastur natijasi interfaol muhitda chiqariladi. Bu muhit katta dasturlarni tuzish jarayonida ularni saqlash va kerakli vaqtda tahrirlash uchun ishlatiladi. Aks holda, dastur kodini takror-takror yozishga to‘g‘ri keladi. Uning yagona kamchiligi – dastur dastlab saqlanadi, undan keyingina ishga tushiriladi. Python dasturlash muhitida birinchi dasturimizni yaratishga harakat qilamiz.
Odatda, dasturlar kiritilgan ma’lumotlarni qabul qilish, qayta ishlash, shuningdek, natijani ekranga chiqarish uchun mo‘ljallangan bo‘ladi. Ma’lumki, axborotlar matnli, raqamli, ovozli, grafik va boshqa shakllarda uzatilishi mumkin. Bunday axborotlarni dasturlash tillarida qayta ishlash uchun, ularni turlarga ajratish lozim. Dasturlarda foydalaniladigan va ma’lumotlar turlari dasturning maqsadiga bog‘liq bo‘ladi: oddiy kalkulyator sonlardan foydalanadi, elektron pochta manzillarini tekshirishga mo‘ljallangan dastur esa matnlar bilan ish ko‘radi. Matnli axborotlar esa belgilar yoki satrli ma’lumotlardan iborat bo‘lishi mumkin.
